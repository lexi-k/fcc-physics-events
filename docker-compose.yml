services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/app:/app/app
    ports:
      - "8000:8000"
    environment:
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - FCC_PHYSICS_EVENTS_BACKEND_LOG_LEVEL=info
      - CERN_CLIENT_ID=${CERN_CLIENT_ID}
      - CERN_CLIENT_SECRET=${CERN_CLIENT_SECRET}
      - FRONTEND_CLIENT_ID=${FRONTEND_CLIENT_ID}
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://localhost:8000}
      # - BACKEND_URL=https://fcc-physics-events-backend.web.cern.ch
      - HOST=${FRONTEND_HOST:-0.0.0.0}
      - FRONTEND_CLIENT_ID=${FRONTEND_CLIENT_ID}
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - backend

  postgres:
    image: postgres:17-alpine
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env

networks:
  app-network:
    driver: bridge
